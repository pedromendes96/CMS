# Generated by Django 2.1.7 on 2019-04-19 18:02

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('taxonomy', '0010_auto_20190417_1647'),
        ('multimedia', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='FacebookGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Facebook Id')),
                ('access_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='Access token')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacebookLiveStreamGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Inactive at')),
                ('stream_url', models.TextField(blank=True, null=True, verbose_name='Stream url')),
                ('secure_stream_url', models.TextField(blank=True, null=True, verbose_name='Stream url')),
                ('stream_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='Stream ID')),
                ('is_live', models.BooleanField(blank=True, default=False, verbose_name='Is Live')),
                ('is_scheduled', models.BooleanField(blank=True, default=False, verbose_name='Is Scheduled')),
                ('facebook_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookGroup')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacebookLiveStreamPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Inactive at')),
                ('stream_url', models.TextField(blank=True, null=True, verbose_name='Stream url')),
                ('secure_stream_url', models.TextField(blank=True, null=True, verbose_name='Stream url')),
                ('stream_id', models.CharField(blank=True, max_length=128, null=True, verbose_name='Stream ID')),
                ('is_live', models.BooleanField(blank=True, default=False, verbose_name='Is Live')),
                ('is_scheduled', models.BooleanField(blank=True, default=False, verbose_name='Is Scheduled')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacebookOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Facebook Id')),
                ('name', models.CharField(max_length=256, verbose_name='Option')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacebookPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Facebook Id')),
                ('access_token', models.CharField(blank=True, max_length=256, null=True, verbose_name='Access token')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FacebookPoll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Facebook Id')),
                ('question', models.CharField(max_length=256, verbose_name='Question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Inactive at')),
                ('sort_order', models.IntegerField(blank=True, unique=True, verbose_name='Order value')),
                ('url', models.URLField(verbose_name='Url')),
                ('show_in_home_page', models.BooleanField(default=False, verbose_name='Show in home page')),
                ('title', models.CharField(max_length=64, verbose_name='Title')),
                ('short_description', models.CharField(blank=True, max_length=256, null=True, verbose_name='Short description')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.RemoveField(
            model_name='stream',
            name='polymorphic_ctype',
        ),
        migrations.RemoveField(
            model_name='stream',
            name='section',
        ),
        migrations.RemoveField(
            model_name='stream',
            name='tags',
        ),
        migrations.AlterModelOptions(
            name='video',
            options={'base_manager_name': 'objects'},
        ),
        migrations.RemoveField(
            model_name='video',
            name='active',
        ),
        migrations.RemoveField(
            model_name='video',
            name='active_at',
        ),
        migrations.RemoveField(
            model_name='video',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='video',
            name='id',
        ),
        migrations.RemoveField(
            model_name='video',
            name='inactive_at',
        ),
        migrations.RemoveField(
            model_name='video',
            name='order_value',
        ),
        migrations.RemoveField(
            model_name='video',
            name='polymorphic_ctype',
        ),
        migrations.RemoveField(
            model_name='video',
            name='section',
        ),
        migrations.RemoveField(
            model_name='video',
            name='short_description',
        ),
        migrations.RemoveField(
            model_name='video',
            name='show_in_home_page',
        ),
        migrations.RemoveField(
            model_name='video',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='video',
            name='title',
        ),
        migrations.RemoveField(
            model_name='video',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='video',
            name='url',
        ),
        migrations.CreateModel(
            name='FacebookStream',
            fields=[
                ('media_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='multimedia.Media')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_live', models.BooleanField(verbose_name='Is Live')),
                ('is_scheduled', models.BooleanField(blank=True, default=False, verbose_name='Is Scheduled')),
                ('planned_start', models.DateTimeField(blank=True, null=True, verbose_name='Planned Start')),
            ],
            options={
                'abstract': False,
            },
            bases=('multimedia.media',),
        ),
        migrations.DeleteModel(
            name='Stream',
        ),
        migrations.AddField(
            model_name='media',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_multimedia.media_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='media',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='taxonomy.Section'),
        ),
        migrations.AddField(
            model_name='media',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='facebookoption',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookPoll'),
        ),
        migrations.AddField(
            model_name='facebooklivestreampage',
            name='facebook_page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookPage'),
        ),
        migrations.AddField(
            model_name='facebooklivestreampage',
            name='poll',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookPoll'),
        ),
        migrations.AddField(
            model_name='facebooklivestreamgroup',
            name='poll',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookPoll'),
        ),
        migrations.AddField(
            model_name='video',
            name='media_ptr',
            field=models.OneToOneField(auto_created=True, default=1, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='multimedia.Media'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='facebookpage',
            name='streams',
            field=models.ManyToManyField(through='multimedia.FacebookLiveStreamPage', to='multimedia.FacebookStream'),
        ),
        migrations.AddField(
            model_name='facebooklivestreampage',
            name='facebook_stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookStream'),
        ),
        migrations.AddField(
            model_name='facebooklivestreamgroup',
            name='facebook_stream',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multimedia.FacebookStream'),
        ),
        migrations.AddField(
            model_name='facebookgroup',
            name='streams',
            field=models.ManyToManyField(through='multimedia.FacebookLiveStreamGroup', to='multimedia.FacebookStream'),
        ),
    ]
