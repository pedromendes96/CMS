# Generated by Django 2.1.7 on 2019-04-08 22:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taxonomy', '0008_auto_20190408_2246'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('title', models.CharField(max_length=128, verbose_name='Title')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly')], max_length=32, verbose_name='Frequency')),
                ('description', models.TextField(verbose_name='Description')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='newsletters', related_query_name='newsletters', to='taxonomy.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsletterMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent')], default='draft', max_length=32, verbose_name='Status')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', related_query_name='messages', to='users.NewsletterAuthor', verbose_name='User')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', related_query_name='messages', to='newsletter.Newsletter', verbose_name='Newsletter')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsletterMessageUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('newsletter_message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message_user', related_query_name='message_user', to='newsletter.NewsletterMessage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message', related_query_name='message', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('newsletter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_subscription', related_query_name='newsletter_subscription', to='newsletter.Newsletter')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='newsletter_subscription', related_query_name='newsletter_subscription', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock())])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.AddField(
            model_name='newslettermessage',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message', related_query_name='message', to='newsletter.Template', verbose_name='User'),
        ),
        migrations.AddField(
            model_name='newslettermessage',
            name='users',
            field=models.ManyToManyField(through='newsletter.NewsletterMessageUser', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='newsletter',
            name='users',
            field=models.ManyToManyField(through='newsletter.NewsletterSubscription', to=settings.AUTH_USER_MODEL),
        ),
    ]
