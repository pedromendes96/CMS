# Generated by Django 2.1.7 on 2019-04-08 22:56

from django.db import migrations, models
import django.db.models.deletion
import wagtail.contrib.table_block.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.embeds.blocks
import wagtail.images.blocks
import wagtailmetadata.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0041_group_collection_permissions_verbose_name_plural'),
        ('users', '0001_initial'),
        ('wagtailimages', '0001_squashed_0021'),
        ('taxonomy', '0008_auto_20190408_2246'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasicOpinionArticle',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('finished', 'Finished'), ('updated', 'Updated')], max_length=32, null=True, verbose_name='Status')),
                ('mobile_content', models.TextField(blank=True, null=True, verbose_name='Mobile Info')),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('blockquote', wagtail.core.blocks.BlockQuoteBlock()), ('embed', wagtail.embeds.blocks.EmbedBlock()), ('carousel', wagtail.core.blocks.StreamBlock([('element', wagtail.core.blocks.StructBlock([('img', wagtail.images.blocks.ImageChooserBlock()), ('quotation', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('author', wagtail.core.blocks.CharBlock())])), ('video', wagtail.embeds.blocks.EmbedBlock())]))]))])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='option_articles', related_query_name='option_articles', to='users.OpinionArticleAuthor')),
                ('categories', models.ManyToManyField(to='taxonomy.Category')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='BasicReporterArticle',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('finished', 'Finished'), ('updated', 'Updated')], max_length=32, null=True, verbose_name='Status')),
                ('mobile_content', models.TextField(blank=True, null=True, verbose_name='Mobile Info')),
                ('is_spotlight', models.BooleanField(default=False, verbose_name='IS spotlight')),
                ('body', wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(classname='full title')), ('paragraph', wagtail.core.blocks.RichTextBlock()), ('image', wagtail.images.blocks.ImageChooserBlock()), ('blockquote', wagtail.core.blocks.BlockQuoteBlock()), ('embed', wagtail.embeds.blocks.EmbedBlock()), ('carousel', wagtail.core.blocks.StreamBlock([('element', wagtail.core.blocks.StructBlock([('img', wagtail.images.blocks.ImageChooserBlock()), ('quotation', wagtail.core.blocks.StructBlock([('text', wagtail.core.blocks.TextBlock()), ('author', wagtail.core.blocks.CharBlock())])), ('video', wagtail.embeds.blocks.EmbedBlock())]))])), ('slider', wagtail.core.blocks.StructBlock([('old_image', wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock()), ('img', wagtail.images.blocks.ImageChooserBlock())])), ('new_image', wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock()), ('img', wagtail.images.blocks.ImageChooserBlock())]))])), ('linechart', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('x_labels', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock())), ('data_sets', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock()), ('color', wagtail.core.blocks.CharBlock(max_length=7, min_length=7)), ('data', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock()))]))), ('x_label', wagtail.core.blocks.CharBlock()), ('y_label', wagtail.core.blocks.CharBlock())])), ('barchart', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('x_labels', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock())), ('data_sets', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock()), ('color', wagtail.core.blocks.CharBlock(max_length=7, min_length=7)), ('data', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock()))]))), ('x_label', wagtail.core.blocks.CharBlock()), ('y_label', wagtail.core.blocks.CharBlock()), ('orientation', wagtail.core.blocks.ChoiceBlock(choices=[('horizontal', 'Horizontal'), ('vertical', 'Vertical')]))])), ('segmentchart', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock()), ('x_labels', wagtail.core.blocks.ListBlock(wagtail.core.blocks.CharBlock())), ('data_set', wagtail.core.blocks.StructBlock([('label', wagtail.core.blocks.CharBlock()), ('data_values', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('color', wagtail.core.blocks.CharBlock(max_length=7, min_length=7)), ('data', wagtail.core.blocks.CharBlock())])))])), ('mode', wagtail.core.blocks.ChoiceBlock(choices=[('pie', 'Pie'), ('doughnut', 'Doughnut')]))])), ('googlemap', wagtail.core.blocks.StructBlock([('latitude', wagtail.core.blocks.DecimalBlock(max_digits=6)), ('longitude', wagtail.core.blocks.DecimalBlock(max_digits=6)), ('zoom', wagtail.core.blocks.IntegerBlock()), ('markers', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('latitude', wagtail.core.blocks.FloatBlock()), ('longitude', wagtail.core.blocks.FloatBlock()), ('content', wagtail.core.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('heading', wagtail.core.blocks.CharBlock()), ('paragraph', wagtail.core.blocks.TextBlock())], required=False))]), required=False))])), ('table', wagtail.contrib.table_block.blocks.TableBlock()), ('facebookpost', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('show_text', wagtail.core.blocks.BooleanBlock(required=False)), ('width', wagtail.core.blocks.IntegerBlock(max_value=750, min_value=350, required=False))])), ('facebookvideo', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('allow_full_screen', wagtail.core.blocks.BooleanBlock(required=False)), ('auto_play', wagtail.core.blocks.BooleanBlock(required=False)), ('width', wagtail.core.blocks.IntegerBlock(max_value=750, min_value=350, required=False)), ('show_text', wagtail.core.blocks.BooleanBlock(required=False)), ('show_caption', wagtail.core.blocks.BooleanBlock(required=False))])), ('instagram', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('hide_caption', wagtail.core.blocks.BooleanBlock(required=False)), ('width', wagtail.core.blocks.IntegerBlock(min_value=320))])), ('pinterestboard', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('square', 'Square'), ('sidebar', 'SideBar'), ('header', 'Header')]))])), ('pinterestpin', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('hide_description', wagtail.core.blocks.BooleanBlock())])), ('pinterestprofile', wagtail.core.blocks.StructBlock([('url', wagtail.core.blocks.URLBlock()), ('size', wagtail.core.blocks.ChoiceBlock(choices=[('square', 'Square'), ('sidebar', 'SideBar'), ('header', 'Header')]))])), ('pagechooser', wagtail.core.blocks.PageChooserBlock())])),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='articles', related_query_name='articles', to='users.Reporter')),
                ('categories', models.ManyToManyField(to='taxonomy.Category')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtailmetadata.models.MetadataMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(blank=True, default=True, verbose_name='Status')),
                ('active_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('inactive_at', models.DateTimeField(blank=True, null=True, verbose_name='Active at')),
                ('name', models.CharField(max_length=32, verbose_name='Name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='basicreporterarticle',
            name='roles',
            field=models.ManyToManyField(to='news.Role'),
        ),
        migrations.AddField(
            model_name='basicreporterarticle',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image'),
        ),
        migrations.AddField(
            model_name='basicopinionarticle',
            name='roles',
            field=models.ManyToManyField(to='news.Role'),
        ),
        migrations.AddField(
            model_name='basicopinionarticle',
            name='search_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.Image', verbose_name='Search image'),
        ),
    ]
